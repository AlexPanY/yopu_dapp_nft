{
  "contractName": "Receiver",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "actual",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "expected",
          "type": "address"
        }
      ],
      "name": "InvalidCrossChainSender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotCrossChainCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossChainRestricted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crossChainOwnerRestricted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"InvalidCrossChainSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCrossChainCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"crossChainOwnerRestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossChainRestricted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"owner\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lib/openzeppelin/contracts/mocks/crosschain/receivers.sol\":\"Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xaa0fa1b4beba6ab736b2434ec16dda4ff4d707271a4348a989c3f30af40d7701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14c9c95010c805386c9da31a86675a6edea2a08226ceb687f463be2373ae42bf\",\"dweb:/ipfs/QmdcyysRPeYJzUSaWiuabyWw22jKpth1xV8CFW8o1gtoE6\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0xe3796f669986f88c231262fc454399c7068123d59c6d2721b3e8807e1b5490e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01dae8a0bedc02610d1eb581a1114ed87afc5f6c0de59b4ffa91fb3d30fc94a7\",\"dweb:/ipfs/QmTEs6tt5TUBxQKnFw4uNPn7ZE59uz3E2hhVKCnKvpzwPh\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/amb/CrossChainEnabledAMB.sol\":{\"keccak256\":\"0x42b1609e36ac87d6229a13404bee22a808613fcc70c6e842f5b77aa7d8d5fa44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e61650728fd1d9ca2290640d1ef3aa8ca364b7a67101eacddb8aae2acae8429\",\"dweb:/ipfs/QmSkKEKFYRboVKENYHswoeXsNecTwVYFbAw9ka3rrPY3sL\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/amb/LibAMB.sol\":{\"keccak256\":\"0x4286b9007b0dba2b7f2125cfa2d975e8afc000f95e8a6335e93490c513ebacc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c9ae8ebd13565779f3fad2bf05e38a379161b8cc3f1c8899339b2d0edbbed1\",\"dweb:/ipfs/QmQXc6WWPx934QbspccDY4GG4jnUgNUbiJ74YpwnaA36cH\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol\":{\"keccak256\":\"0xeba4c39c639e0dfa6612d45f97bb5fedab4c68c7e6275ae694e7461aa1c2b053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c07a5fe4280abed6f69609b5d2dbbcc794a871176b5008ea3dac8d9e651b6595\",\"dweb:/ipfs/QmXraisrfNgsu8xHBDpLxSekAQmFfsP3AvG9YaVYDue6nE\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\":{\"keccak256\":\"0x4f1a8410b42707bf2617615dcad65e482e5795d8c824c6618ba8846966166f27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92e4faeb98a80e8613c74c36a5a5743ecbe143dd3d30c6043f82e2c6e27bd2ad\",\"dweb:/ipfs/QmUiAd7VednbhkhXkyVP8fNtabgHdXceR6s8HWE8XuApAq\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/arbitrum/LibArbitrumL1.sol\":{\"keccak256\":\"0xfa01fbac756db0418f1d1f1bccce6acceb2df86f7942f0e241c295ab0e1de978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2b6992799efe837b58a75155e5cbe9685701b90f3d3b4c25985d5b720c4e63f\",\"dweb:/ipfs/Qmab8raTpZMPqq7M3muL8a5RBdJMmSEo2XSNmSwinDtxXp\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/arbitrum/LibArbitrumL2.sol\":{\"keccak256\":\"0x630557841523912e37d3c1b9344586b01b233d39b2798d49190e377c34921590\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aad7d50a0e3bfcd5b5cf5fc4d63b1fe9d5b240e377412bec696e73720159199\",\"dweb:/ipfs/QmUYsuW3H6xbTYY3kgwUA6hgZUiEqmtryogEyE6R8seaS4\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/errors.sol\":{\"keccak256\":\"0x9d3ffe3bc59c2dac36d93cb4641ffeaa98b96cce588d106efe050a0b67b4d902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf8c1e49412c6975de84fe2c72f6785f139d36843aaa623bc9964003748b3757\",\"dweb:/ipfs/QmcDPdSYsWHGnMZB6yHH8Tczr16QVjd8TjPcMVDdyvPV1W\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol\":{\"keccak256\":\"0x916caba49950984503a48fb919929be66164cf4f985f2c643893d2c1d7e1a9e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b550423c343b8cc53bbd9c470317aaeab40401c3c5226220cce9c4fa969e4e\",\"dweb:/ipfs/QmWxoHyspnpBwSLft1fDkUdQjiGyLeTF34kRGFh6RK3uBW\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/optimism/LibOptimism.sol\":{\"keccak256\":\"0x85369dada4636f11413d8532255ef2b1ac8387166431289e677b328d6608182b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50802dbf575e0fb24507526ba4b6b0a5ef474b239b6ebc83b254a90b7cbf233c\",\"dweb:/ipfs/QmUyFPJWB8ff7zDqK6STK49BWyNN98d3kkfi8uHr4QTGqY\"]},\"project:/contracts/lib/openzeppelin/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol\":{\"keccak256\":\"0x26d452a3cd3a70e875201ed1e3cdfbd6f9488c729290c11f6f36014f5b77fce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2498aae17543714e441b4ea1e8fd9493c06350fd6467f9130b398e5dfae0b86b\",\"dweb:/ipfs/QmNtmpsCTWwU3eucCAf4Wwqzqq9ZQs8t5nw3nJNPzqNZDs\"]},\"project:/contracts/lib/openzeppelin/contracts/mocks/crosschain/receivers.sol\":{\"keccak256\":\"0x346077facc88baf05ccced484685f7a58a764fa74ba26934afb45ccbf59e0639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e0cbbc2a986271806fc367a17cc85e311637118b2c9d4b0365b2b66e6864cb9\",\"dweb:/ipfs/QmPnFZki3KERnZpMKuvBRN1ESwTnRiUXPPjNtupekKshyN\"]},\"project:/contracts/lib/openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]},\"project:/contracts/lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1878f928c6b9c5f9218b20af5eceefc2f593e2a9fddfe379cba8b89a9a7a34ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f28644cc4ba5980823794abc13a87787a2b33b1e5c6ed9f88f390ea5c19078\",\"dweb:/ipfs/QmPERez2GJNhithYeghdHZtLkcLWCybxcScC22iHanJ4UF\"]},\"project:/contracts/lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/amb/IAMB.sol\":{\"keccak256\":\"0x6465aca00eb1dcb80e8c1ee25dab810bce5471c462fc279adfcecfdbb860a42a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e15f5eeafc82ad37c41f863b61755c39e969040f903578e5fb756e633c198b00\",\"dweb:/ipfs/QmS8JWfzvepeNmb8pu6LpWVLwmWBDZTGLUZxxZKeMWLRXh\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/arbitrum/IArbSys.sol\":{\"keccak256\":\"0x57c82523bcec7e5803a61bb378df06470060b11a753225829b243d600b4c1c97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5f0a85f5d36413e929fd8edba367160ddc7bd8b3671e5e564fe167443807c73\",\"dweb:/ipfs/QmXin1zuaMpT7GuMAxs3oeEj9zKpz6P5XSosg5w4DCstdc\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/arbitrum/IBridge.sol\":{\"keccak256\":\"0x615dacc9162f46f84e475a290991bc17cae07fa2c25a66386d65f77f665170ec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc10e2fc969b5fa6f185379611e50d5db57f0020bbf15af7f7fd91f30351d215\",\"dweb:/ipfs/QmNqy8eiB4hUubDJ6sTj4k8G5BNnmSnqewEtVftYF9fGkT\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/arbitrum/IInbox.sol\":{\"keccak256\":\"0x6af61d69af64831df9adbc143733c54fa2a9550c658606d9c7635a0e62fce8ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://18deeceac8db76345be6caaa761ddd70f9760dabdcff9d6f7f0b2747d15a0ed3\",\"dweb:/ipfs/QmXf2jLGPKCuV1zxvyKJMCRUvfhvierW2evZLLJHdRHq3P\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/arbitrum/IMessageProvider.sol\":{\"keccak256\":\"0xefe67cdf9832b0bffe59fd4d25d76507dcfc5e6b7116e7bb137d97c1ea1184a8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9adb7ddff839027e4feb6600e7a7afb2023511ceaf718a0d3d441fa3c64068d\",\"dweb:/ipfs/QmaQTvGcpLgPwQ9ocY3KM37tVH4GEQUoph96A8Nprujo1n\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/arbitrum/IOutbox.sol\":{\"keccak256\":\"0xe8ee3de257e29d89557f90a3239666894e9793911156b22a3b4d85ec97a20ff9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c5e82f81ff5d9f17a018c3efe35a3fb370718dbca7e0a5f2a43a59bdbac1e4ef\",\"dweb:/ipfs/QmPveCRbFUSsqmsaHfP221aGKZNzgMbsP3FRfoarFjoytY\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol\":{\"keccak256\":\"0x5b9a4978a1e32123e5e3b5bf661941603845c6744f1b37ee9065f87923099c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45c663b2a7e8d7f4f0bc8096431ef0f975223e917b88317ffb73244fd41ac499\",\"dweb:/ipfs/QmSQKq8EZ6PMFSLm7yKNaYxgame6CUdZiAj1fVCCdsUhLR\"]},\"project:/contracts/lib/openzeppelin/contracts/vendor/polygon/IFxMessageProcessor.sol\":{\"keccak256\":\"0x63d69655c801b0d568171f3e1bdf6a69ec1e9bb49c768ddd74506b5bc22ca112\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36205070603e72e92c8a1793a7fc1de49dab5e9cd0101576b85e1ced137dc47f\",\"dweb:/ipfs/QmVAw4JjHTUKhWWfAi5cvGeasmgfgPYTXwGh4LZAFHB1Fd\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport \"../../access/Ownable.sol\";\r\nimport \"../../crosschain/amb/CrossChainEnabledAMB.sol\";\r\nimport \"../../crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol\";\r\nimport \"../../crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol\";\r\nimport \"../../crosschain/optimism/CrossChainEnabledOptimism.sol\";\r\nimport \"../../crosschain/polygon/CrossChainEnabledPolygonChild.sol\";\r\n\r\nabstract contract Receiver is CrossChainEnabled {\r\n    // we don't use Ownable because it messes up testing for the upgradeable contracts\r\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\r\n    address public immutable owner = msg.sender;\r\n\r\n    function crossChainRestricted() external onlyCrossChain {}\r\n\r\n    function crossChainOwnerRestricted() external onlyCrossChainSender(owner) {}\r\n}\r\n\r\n/**\r\n * AMB\r\n */\r\ncontract CrossChainEnabledAMBMock is Receiver, CrossChainEnabledAMB {\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor(address bridge) CrossChainEnabledAMB(bridge) {}\r\n}\r\n\r\n/**\r\n * Arbitrum\r\n */\r\ncontract CrossChainEnabledArbitrumL1Mock is Receiver, CrossChainEnabledArbitrumL1 {\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor(address bridge) CrossChainEnabledArbitrumL1(bridge) {}\r\n}\r\n\r\ncontract CrossChainEnabledArbitrumL2Mock is Receiver, CrossChainEnabledArbitrumL2 {}\r\n\r\n/**\r\n * Optimism\r\n */\r\ncontract CrossChainEnabledOptimismMock is Receiver, CrossChainEnabledOptimism {\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor(address bridge) CrossChainEnabledOptimism(bridge) {}\r\n}\r\n\r\n/**\r\n * Polygon\r\n */\r\ncontract CrossChainEnabledPolygonChildMock is Receiver, CrossChainEnabledPolygonChild {\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor(address bridge) CrossChainEnabledPolygonChild(bridge) {}\r\n}\r\n",
  "sourcePath": "D:\\work\\www\\yopu_dapp_nft\\contracts\\lib\\openzeppelin\\contracts\\mocks\\crosschain\\receivers.sol",
  "ast": {
    "absolutePath": "project:/contracts/lib/openzeppelin/contracts/mocks/crosschain/receivers.sol",
    "exportedSymbols": {
      "AMB_Bridge": [
        39115
      ],
      "Address": [
        30926
      ],
      "ArbitrumL1_Bridge": [
        39336
      ],
      "ArbitrumL1_Inbox": [
        39475
      ],
      "ArbitrumL1_Outbox": [
        39556
      ],
      "ArbitrumL2_Bridge": [
        39228
      ],
      "Context": [
        31314
      ],
      "CrossChainEnabled": [
        925
      ],
      "CrossChainEnabledAMB": [
        975
      ],
      "CrossChainEnabledAMBMock": [
        19487
      ],
      "CrossChainEnabledArbitrumL1": [
        1069
      ],
      "CrossChainEnabledArbitrumL1Mock": [
        19503
      ],
      "CrossChainEnabledArbitrumL2": [
        1107
      ],
      "CrossChainEnabledArbitrumL2Mock": [
        19508
      ],
      "CrossChainEnabledOptimism": [
        1289
      ],
      "CrossChainEnabledOptimismMock": [
        19524
      ],
      "CrossChainEnabledPolygonChild": [
        1432
      ],
      "CrossChainEnabledPolygonChildMock": [
        19540
      ],
      "DEFAULT_SENDER": [
        1342
      ],
      "IFxMessageProcessor": [
        39761
      ],
      "InvalidCrossChainSender": [
        1239
      ],
      "LibAMB": [
        1019
      ],
      "LibArbitrumL1": [
        1173
      ],
      "LibArbitrumL2": [
        1229
      ],
      "LibOptimism": [
        1333
      ],
      "NotCrossChainCall": [
        1233
      ],
      "Optimism_Bridge": [
        39749
      ],
      "Ownable": [
        875
      ],
      "Receiver": [
        19471
      ],
      "ReentrancyGuard": [
        21585
      ]
    },
    "id": 19541,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19444,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:163"
      },
      {
        "absolutePath": "project:/contracts/lib/openzeppelin/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 19445,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19541,
        "sourceUnit": 876,
        "src": "62:34:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/openzeppelin/contracts/crosschain/amb/CrossChainEnabledAMB.sol",
        "file": "../../crosschain/amb/CrossChainEnabledAMB.sol",
        "id": 19446,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19541,
        "sourceUnit": 976,
        "src": "98:55:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol",
        "file": "../../crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol",
        "id": 19447,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19541,
        "sourceUnit": 1070,
        "src": "155:67:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/openzeppelin/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
        "file": "../../crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
        "id": 19448,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19541,
        "sourceUnit": 1108,
        "src": "224:67:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/openzeppelin/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol",
        "file": "../../crosschain/optimism/CrossChainEnabledOptimism.sol",
        "id": 19449,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19541,
        "sourceUnit": 1290,
        "src": "293:65:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/openzeppelin/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol",
        "file": "../../crosschain/polygon/CrossChainEnabledPolygonChild.sol",
        "id": 19450,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19541,
        "sourceUnit": 1433,
        "src": "360:68:163",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 19451,
              "name": "CrossChainEnabled",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 925,
              "src": "462:17:163"
            },
            "id": 19452,
            "nodeType": "InheritanceSpecifier",
            "src": "462:17:163"
          }
        ],
        "canonicalName": "Receiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 19471,
        "linearizedBaseContracts": [
          19471,
          925
        ],
        "name": "Receiver",
        "nameLocation": "450:8:163",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 19453,
              "nodeType": "StructuredDocumentation",
              "src": "575:87:163",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
            },
            "functionSelector": "8da5cb5b",
            "id": 19457,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "693:5:163",
            "nodeType": "VariableDeclaration",
            "scope": 19471,
            "src": "668:43:163",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19454,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "668:7:163",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 19455,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967281,
                "src": "701:3:163",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 19456,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "701:10:163",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19462,
              "nodeType": "Block",
              "src": "776:2:163",
              "statements": []
            },
            "functionSelector": "4b074af5",
            "id": 19463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19459,
                  "name": "onlyCrossChain",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 891,
                  "src": "761:14:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "761:14:163"
              }
            ],
            "name": "crossChainRestricted",
            "nameLocation": "729:20:163",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "749:2:163"
            },
            "returnParameters": {
              "id": 19461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:163"
            },
            "scope": 19471,
            "src": "720:58:163",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19469,
              "nodeType": "Block",
              "src": "860:2:163",
              "statements": []
            },
            "functionSelector": "f97f5189",
            "id": 19470,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 19466,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19457,
                    "src": "853:5:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19467,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19465,
                  "name": "onlyCrossChainSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 912,
                  "src": "832:20:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "832:27:163"
              }
            ],
            "name": "crossChainOwnerRestricted",
            "nameLocation": "795:25:163",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:2:163"
            },
            "returnParameters": {
              "id": 19468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:163"
            },
            "scope": 19471,
            "src": "786:76:163",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 19541,
        "src": "432:433:163",
        "usedErrors": [
          1233,
          1239
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19473,
              "name": "Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19471,
              "src": "924:8:163"
            },
            "id": 19474,
            "nodeType": "InheritanceSpecifier",
            "src": "924:8:163"
          },
          {
            "baseName": {
              "id": 19475,
              "name": "CrossChainEnabledAMB",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 975,
              "src": "934:20:163"
            },
            "id": 19476,
            "nodeType": "InheritanceSpecifier",
            "src": "934:20:163"
          }
        ],
        "canonicalName": "CrossChainEnabledAMBMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19472,
          "nodeType": "StructuredDocumentation",
          "src": "869:16:163",
          "text": " AMB"
        },
        "fullyImplemented": true,
        "id": 19487,
        "linearizedBaseContracts": [
          19487,
          975,
          19471,
          925
        ],
        "name": "CrossChainEnabledAMBMock",
        "nameLocation": "896:24:163",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19485,
              "nodeType": "Block",
              "src": "1073:2:163",
              "statements": []
            },
            "documentation": {
              "id": 19477,
              "nodeType": "StructuredDocumentation",
              "src": "962:48:163",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 19486,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 19482,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19479,
                    "src": "1065:6:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19483,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 19481,
                  "name": "CrossChainEnabledAMB",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 975,
                  "src": "1044:20:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "1044:28:163"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19479,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1036:6:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 19486,
                  "src": "1028:14:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:16:163"
            },
            "returnParameters": {
              "id": 19484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:163"
            },
            "scope": 19487,
            "src": "1016:59:163",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19541,
        "src": "887:191:163",
        "usedErrors": [
          1233,
          1239
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19489,
              "name": "Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19471,
              "src": "1149:8:163"
            },
            "id": 19490,
            "nodeType": "InheritanceSpecifier",
            "src": "1149:8:163"
          },
          {
            "baseName": {
              "id": 19491,
              "name": "CrossChainEnabledArbitrumL1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1069,
              "src": "1159:27:163"
            },
            "id": 19492,
            "nodeType": "InheritanceSpecifier",
            "src": "1159:27:163"
          }
        ],
        "canonicalName": "CrossChainEnabledArbitrumL1Mock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19488,
          "nodeType": "StructuredDocumentation",
          "src": "1082:21:163",
          "text": " Arbitrum"
        },
        "fullyImplemented": true,
        "id": 19503,
        "linearizedBaseContracts": [
          19503,
          1069,
          19471,
          925
        ],
        "name": "CrossChainEnabledArbitrumL1Mock",
        "nameLocation": "1114:31:163",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19501,
              "nodeType": "Block",
              "src": "1312:2:163",
              "statements": []
            },
            "documentation": {
              "id": 19493,
              "nodeType": "StructuredDocumentation",
              "src": "1194:48:163",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 19502,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 19498,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19495,
                    "src": "1304:6:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19499,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 19497,
                  "name": "CrossChainEnabledArbitrumL1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1069,
                  "src": "1276:27:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "1276:35:163"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19495,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1268:6:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 19502,
                  "src": "1260:14:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1259:16:163"
            },
            "returnParameters": {
              "id": 19500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1312:0:163"
            },
            "scope": 19503,
            "src": "1248:66:163",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19541,
        "src": "1105:212:163",
        "usedErrors": [
          1233,
          1239
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19504,
              "name": "Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19471,
              "src": "1365:8:163"
            },
            "id": 19505,
            "nodeType": "InheritanceSpecifier",
            "src": "1365:8:163"
          },
          {
            "baseName": {
              "id": 19506,
              "name": "CrossChainEnabledArbitrumL2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1107,
              "src": "1375:27:163"
            },
            "id": 19507,
            "nodeType": "InheritanceSpecifier",
            "src": "1375:27:163"
          }
        ],
        "canonicalName": "CrossChainEnabledArbitrumL2Mock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 19508,
        "linearizedBaseContracts": [
          19508,
          1107,
          19471,
          925
        ],
        "name": "CrossChainEnabledArbitrumL2Mock",
        "nameLocation": "1330:31:163",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 19541,
        "src": "1321:84:163",
        "usedErrors": [
          1233,
          1239
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19510,
              "name": "Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19471,
              "src": "1474:8:163"
            },
            "id": 19511,
            "nodeType": "InheritanceSpecifier",
            "src": "1474:8:163"
          },
          {
            "baseName": {
              "id": 19512,
              "name": "CrossChainEnabledOptimism",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1289,
              "src": "1484:25:163"
            },
            "id": 19513,
            "nodeType": "InheritanceSpecifier",
            "src": "1484:25:163"
          }
        ],
        "canonicalName": "CrossChainEnabledOptimismMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19509,
          "nodeType": "StructuredDocumentation",
          "src": "1409:21:163",
          "text": " Optimism"
        },
        "fullyImplemented": true,
        "id": 19524,
        "linearizedBaseContracts": [
          19524,
          1289,
          19471,
          925
        ],
        "name": "CrossChainEnabledOptimismMock",
        "nameLocation": "1441:29:163",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19522,
              "nodeType": "Block",
              "src": "1633:2:163",
              "statements": []
            },
            "documentation": {
              "id": 19514,
              "nodeType": "StructuredDocumentation",
              "src": "1517:48:163",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 19523,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 19519,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19516,
                    "src": "1625:6:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19520,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 19518,
                  "name": "CrossChainEnabledOptimism",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1289,
                  "src": "1599:25:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "1599:33:163"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19516,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1591:6:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 19523,
                  "src": "1583:14:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:16:163"
            },
            "returnParameters": {
              "id": 19521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1633:0:163"
            },
            "scope": 19524,
            "src": "1571:64:163",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19541,
        "src": "1432:206:163",
        "usedErrors": [
          1233,
          1239
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19526,
              "name": "Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19471,
              "src": "1710:8:163"
            },
            "id": 19527,
            "nodeType": "InheritanceSpecifier",
            "src": "1710:8:163"
          },
          {
            "baseName": {
              "id": 19528,
              "name": "CrossChainEnabledPolygonChild",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1432,
              "src": "1720:29:163"
            },
            "id": 19529,
            "nodeType": "InheritanceSpecifier",
            "src": "1720:29:163"
          }
        ],
        "canonicalName": "CrossChainEnabledPolygonChildMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19525,
          "nodeType": "StructuredDocumentation",
          "src": "1642:20:163",
          "text": " Polygon"
        },
        "fullyImplemented": true,
        "id": 19540,
        "linearizedBaseContracts": [
          19540,
          1432,
          21585,
          19471,
          925,
          39761
        ],
        "name": "CrossChainEnabledPolygonChildMock",
        "nameLocation": "1673:33:163",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19538,
              "nodeType": "Block",
              "src": "1877:2:163",
              "statements": []
            },
            "documentation": {
              "id": 19530,
              "nodeType": "StructuredDocumentation",
              "src": "1757:48:163",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 19539,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 19535,
                    "name": "bridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19532,
                    "src": "1869:6:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 19536,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 19534,
                  "name": "CrossChainEnabledPolygonChild",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1432,
                  "src": "1839:29:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "1839:37:163"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19532,
                  "mutability": "mutable",
                  "name": "bridge",
                  "nameLocation": "1831:6:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 19539,
                  "src": "1823:14:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1822:16:163"
            },
            "returnParameters": {
              "id": 19537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:163"
            },
            "scope": 19540,
            "src": "1811:68:163",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19541,
        "src": "1664:218:163",
        "usedErrors": [
          1233,
          1239
        ]
      }
    ],
    "src": "35:1849:163"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-28T15:05:48.363Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "owner": {
        "custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}