{
  "contractName": "ERC165StorageMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "registerInterface",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"registerInterface\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lib/openzeppelin/contracts/mocks/ERC165StorageMock.sol\":\"ERC165StorageMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/openzeppelin/contracts/mocks/ERC165StorageMock.sol\":{\"keccak256\":\"0x2deb46d13d021d60e2d420d58b3153f9c07e8e3ae7cdcee72cd1fd3b2145c72c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed55b8dc08d2e2893d39829000474796a4ce455fd75d149eb3f179fece7b76a5\",\"dweb:/ipfs/QmTtqJQsjKMts5JinSjpVtGsDC8N8r2ULsYxQUpDoSzuC3\"]},\"project:/contracts/lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"project:/contracts/lib/openzeppelin/contracts/utils/introspection/ERC165Storage.sol\":{\"keccak256\":\"0x024316d8bf495b081a900889292e83f4dd0c15655b57e5a0d005c4fd81cb23af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://130801e51e6d448afb75b4fa06332feeb58e746bb88db0cb81e744380c5360ef\",\"dweb:/ipfs/QmV4RG2QVnh6Hybpub2A5ypz4qv1usB7BGNAuPyL5bJw1E\"]},\"project:/contracts/lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063214cdb8014610062575b600080fd5b61004e610049366004610145565b610077565b604051901515815260200160405180910390f35b610075610070366004610145565b6100b7565b005b60006301ffc9a760e01b6001600160e01b0319831614806100b157506001600160e01b0319821660009081526020819052604090205460ff165b92915050565b6100c0816100c3565b50565b6001600160e01b031980821690036101205760405162461bcd60e51b815260206004820152601c60248201527b115490cc4d8d4e881a5b9d985b1a59081a5b9d195c999858d9481a5960221b604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60006020828403121561015757600080fd5b81356001600160e01b03198116811461016f57600080fd5b939250505056fea2646970667358221220bc72e0399c96e964a08260582b9b39185ace9bae132af16bcbd22f0bd5eb993b64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063214cdb8014610062575b600080fd5b61004e610049366004610145565b610077565b604051901515815260200160405180910390f35b610075610070366004610145565b6100b7565b005b60006301ffc9a760e01b6001600160e01b0319831614806100b157506001600160e01b0319821660009081526020819052604090205460ff165b92915050565b6100c0816100c3565b50565b6001600160e01b031980821690036101205760405162461bcd60e51b815260206004820152601c60248201527b115490cc4d8d4e881a5b9d985b1a59081a5b9d195c999858d9481a5960221b604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60006020828403121561015757600080fd5b81356001600160e01b03198116811461016f57600080fd5b939250505056fea2646970667358221220bc72e0399c96e964a08260582b9b39185ace9bae132af16bcbd22f0bd5eb993b64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:851:273",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:273",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:273",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:273",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:273",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:273",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:273"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:273"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:273"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:273"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:273"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:273"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:273"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:273",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:273"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:273"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:273",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:273"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:273"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:273",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:273",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:273",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:273",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:273"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:273"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:273"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:273"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:273"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:273",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:273",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:273"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:273"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:273"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:273"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:273"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:273"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:273"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:273"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:273",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:273"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:273"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:273",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:273",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:273",
                "type": ""
              }
            ],
            "src": "14:286:273"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:273",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:273",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:273"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:273",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:273"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:273"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:273"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:273"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:273"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:273"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:273"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:273"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:273"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:273"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:273",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:273",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:273",
                "type": ""
              }
            ],
            "src": "305:187:273"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "671:178:273",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "688:9:273"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "699:2:273",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:21:273"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "681:21:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "722:9:273"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "733:2:273",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "718:3:273"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "718:18:273"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "738:2:273",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "711:30:273"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "711:30:273"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "761:9:273"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "772:2:273",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "757:3:273"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:18:273"
                      },
                      {
                        "hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "777:30:273",
                        "type": "",
                        "value": "ERC165: invalid interface id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:58:273"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "750:58:273"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "817:26:273",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "829:9:273"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "840:2:273",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "825:3:273"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:18:273"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "817:4:273"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "648:9:273",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "662:4:273",
                "type": ""
              }
            ],
            "src": "497:352:273"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC165: invalid interface id\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 273,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "116:158:98:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "116:158:98:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:190:250;;;;;;:::i;:::-;;:::i;:::-;;;470:14:273;;463:22;445:41;;433:2;418:18;618:190:250;;;;;;;167:104:98;;;;;;:::i;:::-;;:::i;:::-;;618:190:250;703:4;-1:-1:-1;;;;;;;;;963:40:248;;;727:73:250;;;-1:-1:-1;;;;;;;767:33:250;;:20;:33;;;;;;;;;;;;;727:73;720:80;618:190;-1:-1:-1;;618:190:250:o;167:104:98:-;232:31;251:11;232:18;:31::i;:::-;167:104;:::o;1215:201:250:-;-1:-1:-1;;;;;;1299:25:250;;;;;1291:66;;;;-1:-1:-1;;;1291:66:250;;699:2:273;1291:66:250;;;681:21:273;738:2;718:18;;;711:30;-1:-1:-1;;;757:18:273;;;750:58;825:18;;1291:66:250;;;;;;;;-1:-1:-1;;;;;;1368:33:250;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1368:40:250;1404:4;1368:40;;;1215:201::o;14:286:273:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:273;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:273:o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/introspection/ERC165Storage.sol\";\r\n\r\ncontract ERC165StorageMock is ERC165Storage {\r\n    function registerInterface(bytes4 interfaceId) public {\r\n        _registerInterface(interfaceId);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\work\\www\\yopu_dapp_nft\\contracts\\lib\\openzeppelin\\contracts\\mocks\\ERC165StorageMock.sol",
  "ast": {
    "absolutePath": "project:/contracts/lib/openzeppelin/contracts/mocks/ERC165StorageMock.sol",
    "exportedSymbols": {
      "ERC165": [
        33531
      ],
      "ERC165Storage": [
        33784
      ],
      "ERC165StorageMock": [
        10621
      ],
      "IERC165": [
        33855
      ]
    },
    "id": 10622,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10607,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:98"
      },
      {
        "absolutePath": "project:/contracts/lib/openzeppelin/contracts/utils/introspection/ERC165Storage.sol",
        "file": "../utils/introspection/ERC165Storage.sol",
        "id": 10608,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10622,
        "sourceUnit": 33785,
        "src": "62:50:98",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10609,
              "name": "ERC165Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33784,
              "src": "146:13:98"
            },
            "id": 10610,
            "nodeType": "InheritanceSpecifier",
            "src": "146:13:98"
          }
        ],
        "canonicalName": "ERC165StorageMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10621,
        "linearizedBaseContracts": [
          10621,
          33784,
          33531,
          33855
        ],
        "name": "ERC165StorageMock",
        "nameLocation": "125:17:98",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10619,
              "nodeType": "Block",
              "src": "221:50:98",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10616,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10612,
                        "src": "251:11:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 10615,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33783,
                      "src": "232:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 10617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "232:31:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10618,
                  "nodeType": "ExpressionStatement",
                  "src": "232:31:98"
                }
              ]
            },
            "functionSelector": "214cdb80",
            "id": 10620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterface",
            "nameLocation": "176:17:98",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10612,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "201:11:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 10620,
                  "src": "194:18:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10611,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "194:6:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "193:20:98"
            },
            "returnParameters": {
              "id": 10614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:98"
            },
            "scope": 10621,
            "src": "167:104:98",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10622,
        "src": "116:158:98",
        "usedErrors": []
      }
    ],
    "src": "35:241:98"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-28T15:05:47.403Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}